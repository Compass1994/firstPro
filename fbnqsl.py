
# 斐波那契数列
# 两个元素的综合确定下一个数

print('实现一个斐波那契数列')

# 实现方法一
a, b = 0, 1
while b < 10:
    print(b, sep=',', end=' ')  # 这里的 sep=',' 不起作用，因为循环一次输出一次。
    a, b = b, a+b
'''
a, b = b, a+b 需要先计算右边，然后赋值给左边，同时在计算右边表达式的时候按照从左到右的顺序计算，相当于如下代码
n = b
m = a+b
a = n
b = m
'''


# 实现方法二(此方法的作用用于确定输入项数对应的斐波那契数列值)
# 此为递归算法，递归算法对于资源的耗费巨大，不建议使用
def fbnq(n):
    if n < 1:
        print("传入值发生错误")
        return -1
    if n == 1 or n == 2:
        return 1
    else:
        return fbnq(n - 1) + fbnq(n - 2)


print(fbnq(2))  # 类比输入 2 即是求取第 2 项数列的值。


